//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.IO;
    using System.Windows.Media;
    using System.Windows.Media.Imaging;

    public partial class Vehicle : INotifyPropertyChanged
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Vehicle()
        {
            this.Bookings = new HashSet<Booking>();
            this.Reviews = new HashSet<Review>();
        }

        public int VehicleID { get; set; }
        public string Make { get; set; }
        public string Model { get; set; }

        private byte[] _vehicleImage;
        public byte[] VehicleImage
        {
            get => _vehicleImage;
            set
            {
                _vehicleImage = value;
                _vehicleImageSource = null;
                OnPropertyChanged(nameof(VehicleImage));
                OnPropertyChanged(nameof(VehicleImageSource));
            }
        }

        public int Year { get; set; }
        public string LicensePlate { get; set; }
        public Nullable<int> VehicleCategoryID { get; set; }
        public decimal DailyRate { get; set; }
        public Nullable<bool> Available { get; set; }
        public Nullable<System.DateTime> CreatedAt { get; set; }
        public Nullable<decimal> AvgRating { get; set; }

        private ImageSource _vehicleImageSource;
        public ImageSource VehicleImageSource
        {
            get
            {
                if (_vehicleImageSource == null && VehicleImage != null && VehicleImage.Length > 0)
                {
                    _vehicleImageSource = ByteArrayToImageSource(VehicleImage);
                }
                else if (_vehicleImageSource == null)
                {
                    _vehicleImageSource = new BitmapImage(new Uri("pack://application:,,,/Resources/Images/car_placeholder.png"));
                }
                return _vehicleImageSource;
            }
        }

        private ImageSource ByteArrayToImageSource(byte[] imageData)
        {
            using (var stream = new MemoryStream(imageData))
            {
                var bitmapImage = new BitmapImage();
                bitmapImage.BeginInit();
                bitmapImage.CacheOption = BitmapCacheOption.OnLoad;
                bitmapImage.StreamSource = stream;
                bitmapImage.EndInit();
                bitmapImage.Freeze();
                return bitmapImage;
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;
        public void OnPropertyChanged(string propertyName)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Booking> Bookings { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Review> Reviews { get; set; }
        public virtual VehicleCategory VehicleCategory { get; set; }
    }
}

